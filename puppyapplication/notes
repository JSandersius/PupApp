url for this video https://www.youtube.com/watch?v=_l1cwxBLhBY&feature=youtu.be

if we look at the finished app, we see that the landing is static, pretty
simple to build
the second page is looks a little bit more tricky
we're going to have to make an API call for this one, and have some changing components
so we'll be using state as well 

the final page has a form, so it looks like we're probably going to be using state on this one as well 
and the results are going to be from an API call 

first things first, get everything set up  
we'll use create-react-app to get our boilerplate 
we'll then use yarn to add our dependencies, AXIOS and React Router DOM 
next we'll add bootstrap to index.html file 

to begin we're going to import react from react --> in App.js 
	browser router as router and route
		both of these will come from the react router dom 

then setup router component --> in App.js 
then import the navbar, the footer and the wrapper components
	though footer and navabar compnents ae just for styling, so they're not too important 

And then import the three pages that we're going to be creating 
discover
about 
search 

Now, the compoents within the wrapper are going to be rendered depending on the path 
	This is where we'll use react router  

Ok, so settng this up is pretty easy, these components will only be set up if the path is EXACTLY matched
	if we were to leave out the exact property, the component will render at the path starting at the suggested path 

if you dont add a path, you can choose to render a component on no match whatsoever 
This give you the option to add a 404 page 
	 

Dont be too worried if this hasn't clicked yet, it will in a bit 

I'm now going to create component files and simply add an h1 tag, including the name of the component so I can check to make sure the react router is working properly 

_______
Ok so after much effort the react-router is properly working 
the webpage compiles and the three path work 

now we're going to build the navbar itself 
the main difference we're going to have in a react router is that we'er going to be using 
a link tag over a href
	the anchor tag reload the whole page, Link prevents that 
	link will change the page pathname without reloading the whole page 
	allowing us to take advantage of react ability to reload individual components

for further explanation on react router, google search "simple react router"
https://medium.com/@pshrmn/a-simple-react-router-v4-tutorial-7f23ff27adf	

building out the rest of the navbar is essentially the same as building out a regular navbar 
we're also going to be adding a conditional active class that is only going to be applies if the pathname matches

